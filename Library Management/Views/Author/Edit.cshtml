@model Library_Management.Models.EditAuthorViewModel

@{
    ViewData["Title"] = $"Edit - {Model.Name}";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <h3><i class="fas fa-user-edit"></i> Edit Author</h3>
                        <div>
                            <a asp-action="Details" asp-route-id="@Model.AuthorId" class="btn btn-outline-info">
                                <i class="fas fa-eye"></i> View Details
                            </a>
                            <a asp-action="Index" class="btn btn-outline-secondary">
                                <i class="fas fa-arrow-left"></i> Back to Authors
                            </a>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <form asp-action="Edit" method="post">
                        <input type="hidden" asp-for="AuthorId" />
                        <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>
                        
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Name" class="form-label">
                                        <i class="fas fa-user"></i> Name *
                                    </label>
                                    <input asp-for="Name" class="form-control" placeholder="Enter author's full name" />
                                    <span asp-validation-for="Name" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="BirthDate" class="form-label">
                                        <i class="fas fa-birthday-cake"></i> Birth Date *
                                    </label>
                                    <input asp-for="BirthDate" class="form-control" type="date" />
                                    <span asp-validation-for="BirthDate" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <label asp-for="ProfileImageUrl" class="form-label">
                                        <i class="fas fa-image"></i> Profile Image URL
                                    </label>
                                    <input asp-for="ProfileImageUrl" class="form-control" placeholder="https://example.com/image.jpg" />
                                    <span asp-validation-for="ProfileImageUrl" class="text-danger"></span>
                                    <div class="form-text">Optional: Enter a URL to the author's profile image</div>
                                    @if (!string.IsNullOrEmpty(Model.ProfileImageUrl))
                                    {
                                        <div id="current-image-preview" class="mt-2">
                                            <small class="text-muted">Current Image:</small><br>
                                            <img src="@Model.ProfileImageUrl" alt="Current Profile" class="rounded-circle" 
                                                 style="width: 80px; height: 80px; object-fit: cover;" 
                                                 onerror="this.style.display='none'; this.nextSibling.style.display='block';">
                                            <span style="display: none;" class="text-danger small">Unable to load current image</span>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>

                        <div class="mb-4">
                            <label asp-for="Biography" class="form-label">
                                <i class="fas fa-user-circle"></i> Biography
                            </label>
                            <textarea asp-for="Biography" class="form-control" rows="4" placeholder="Enter a brief biography of the author..."></textarea>
                            <span asp-validation-for="Biography" class="text-danger"></span>
                            <div class="form-text">Optional: Brief description about the author</div>
                        </div>


                        <div class="d-flex justify-content-between">
                            <a asp-action="Details" asp-route-id="@Model.AuthorId" class="btn btn-secondary">
                                <i class="fas fa-times"></i> Cancel
                            </a>
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save"></i> Save Changes
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        // Preview profile image on URL change
        document.getElementById('ProfileImageUrl').addEventListener('blur', function() {
            const url = this.value;
            let preview = document.getElementById('image-preview');
            
            if (url) {
                // Create or update preview element
                if (!preview) {
                    preview = document.createElement('div');
                    preview.id = 'image-preview';
                    preview.className = 'mt-2';
                    this.parentNode.appendChild(preview);
                }
                
                // Add new image preview
                preview.innerHTML = `
                    <small class="text-muted">New Image Preview:</small><br>
                    <img src="${url}" alt="New Profile Preview" class="rounded-circle" 
                         style="width: 80px; height: 80px; object-fit: cover;" 
                         onerror="this.style.display='none'; this.nextSibling.style.display='block';">
                    <span style="display: none;" class="text-danger small">Unable to load image from URL</span>
                `;
            } else if (preview) {
                // Remove preview if URL is empty
                preview.remove();
            }
        });

        // Auto-calculate age and show warning for invalid dates
        document.getElementById('BirthDate').addEventListener('change', function() {
            const birthDate = new Date(this.value);
            const today = new Date();
            
            // Calculate age
            let age = today.getFullYear() - birthDate.getFullYear();
            const monthDiff = today.getMonth() - birthDate.getMonth();
            
            if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {
                age--;
            }

            let ageDisplay = document.getElementById('age-display');
            
            if (birthDate > today) {
                // Show warning for future dates
                if (!ageDisplay) {
                    ageDisplay = document.createElement('div');
                    ageDisplay.id = 'age-display';
                    ageDisplay.className = 'form-text';
                    this.parentNode.appendChild(ageDisplay);
                }
                ageDisplay.className = 'form-text text-warning';
                ageDisplay.textContent = 'Warning: Birth date is in the future';
            } else if (age >= 0) {
                // Show calculated age
                if (!ageDisplay) {
                    ageDisplay = document.createElement('div');
                    ageDisplay.id = 'age-display';
                    ageDisplay.className = 'form-text';
                    this.parentNode.appendChild(ageDisplay);
                }
                ageDisplay.className = 'form-text text-muted';
                ageDisplay.textContent = `Current age: ${age} years old`;
            } else if (ageDisplay) {
                // Remove age display for invalid dates
                ageDisplay.remove();
            }
        });

        // Trigger age calculation on page load if birth date exists
        document.addEventListener('DOMContentLoaded', function() {
            const birthDateInput = document.getElementById('BirthDate');
            if (birthDateInput.value) {
                birthDateInput.dispatchEvent(new Event('change'));
            }
        });
    </script>
}
