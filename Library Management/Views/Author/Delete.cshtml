@model Library_Management.Models.DeleteAuthorViewModel

@{
    ViewData["Title"] = $"Delete - {Model.Name}";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card border-danger">
                <div class="card-header bg-danger text-white">
                    <div class="d-flex justify-content-between align-items-center">
                        <h3><i class="fas fa-trash-alt"></i> Delete Author</h3>
                        <a asp-action="Index" class="btn btn-outline-light btn-sm">
                            <i class="fas fa-arrow-left"></i> Back to Authors
                        </a>
                    </div>
                </div>
                <div class="card-body">
                    <div class="alert alert-warning">
                        <i class="fas fa-exclamation-triangle"></i>
                        <strong>Warning:</strong> You are about to permanently delete this author. This action cannot be undone.
                    </div>

                    <div class="row">
                        <div class="col-md-4 text-center mb-3">
                            @if (!string.IsNullOrEmpty(Model.ProfileImageUrl))
                            {
                                <img src="@Model.ProfileImageUrl" alt="@Model.Name" class="rounded-circle mb-3" 
                                     style="width: 120px; height: 120px; object-fit: cover;">
                            }
                            else
                            {
                                <div class="bg-secondary rounded-circle mb-3 mx-auto d-flex align-items-center justify-content-center" 
                                     style="width: 120px; height: 120px;">
                                    <i class="fas fa-user fa-3x text-white"></i>
                                </div>
                            }
                        </div>
                        <div class="col-md-8">
                            <h4>@Model.Name</h4>
                            <p class="text-muted">
                                <i class="fas fa-birthday-cake"></i> @Model.FormattedBirthDate
                                @if (Model.BirthDate.HasValue)
                                {
                                    var age = DateTime.Now.Year - Model.BirthDate.Value.Year;
                                    if (DateTime.Now.DayOfYear < Model.BirthDate.Value.DayOfYear) age--;
                                    
                                    if (age > 0)
                                    {
                                        <span>(Age @age)</span>
                                    }
                                }
                            </p>
                            <p class="text-muted">
                                <i class="fas fa-book"></i> @Model.ActiveBooksCount Active / @Model.TotalBooksCount Total
                            </p>
                            @if (!string.IsNullOrEmpty(Model.Biography))
                            {
                                <p class="mt-3">
                                    <strong>Biography:</strong><br>
                                    @(Model.Biography.Length > 200 ? Model.Biography.Substring(0, 200) + "..." : Model.Biography)
                                </p>
                            }
                        </div>
                    </div>

                    @if (Model.ActiveBooksCount > 0)
                    {
                        <div class="alert alert-danger mt-4">
                            <i class="fas fa-exclamation-circle"></i>
                            <strong>Impact Warning:</strong> This author has <strong>@Model.ActiveBooksCount book(s)</strong> in the library.
                            Deleting this author will also remove these books from the system:
                            
                            <div class="mt-3">
                                <p class="text-muted">All books by this author will be removed from the system.</p>
                            </div>
                            
                            <div class="mt-3">
                                <strong>Alternative:</strong> Consider archiving this author instead of deleting to preserve the books while hiding the author from active lists.
                                <form asp-action="ArchiveAuthor" asp-route-id="@Model.AuthorId" method="post" class="d-inline">
                                    <button type="submit" class="btn btn-warning btn-sm ms-2" onclick="return confirm('Are you sure you want to archive this author? They will be hidden from main listings but can be restored later.')">
                                        <i class="fas fa-archive"></i> Archive Instead
                                    </button>
                                </form>
                            </div>
                        </div>
                    }

                    <div class="mt-4">
                        <h6>Deletion Checklist:</h6>
                        <ul class="list-unstyled">
                            <li>
                                <i class="fas fa-check text-success"></i> Author information will be permanently removed
                            </li>
                            @if (Model.ActiveBooksCount > 0)
                            {
                                <li>
                                    <i class="fas fa-times text-danger"></i> @Model.ActiveBooksCount associated book(s) will be deleted
                                </li>
                            }
                            <li>
                                <i class="fas fa-exclamation-triangle text-warning"></i> This action cannot be undone
                            </li>
                        </ul>
                    </div>

                    <form asp-action="Delete" method="post" class="mt-4">
                        <input type="hidden" asp-for="AuthorId" />
                        <input type="hidden" asp-for="Name" />
                        
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <a asp-action="Details" asp-route-id="@Model.AuthorId" class="btn btn-secondary me-2">
                                    <i class="fas fa-eye"></i> View Details
                                </a>
                                <a asp-action="Index" class="btn btn-outline-secondary">
                                    <i class="fas fa-times"></i> Cancel
                                </a>
                            </div>
                            
                            <div>
                                @if (Model.ActiveBooksCount > 0)
                                {
                                    <button type="submit" class="btn btn-danger" onclick="return confirmDeletion()">
                                        <i class="fas fa-trash-alt"></i> Delete Author & Books
                                    </button>
                                }
                                else
                                {
                                    <button type="submit" class="btn btn-danger" onclick="return confirmDeletion()">
                                        <i class="fas fa-trash-alt"></i> Delete Author
                                    </button>
                                }
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function confirmDeletion() {
            const authorName = '@Html.Raw(Html.Encode(Model.Name))';
            const booksCount = @Model.ActiveBooksCount;
            
            let message = `Are you sure you want to permanently delete the author "${authorName}"?`;
            
            if (booksCount > 0) {
                message += `\n\nThis will also delete ${booksCount} book(s) associated with this author.`;
                message += `\n\nConsider using the "Archive" option instead to preserve the books.`;
            }
            
            message += `\n\nThis action cannot be undone.`;
            
            return confirm(message);
        }

        // Add double-click protection to prevent accidental deletions
        let deleteClicked = false;
        document.querySelector('button[type="submit"]').addEventListener('click', function(e) {
            if (deleteClicked) {
                e.preventDefault();
                return false;
            }
            
            if (confirmDeletion()) {
                deleteClicked = true;
                this.disabled = true;
                this.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Deleting...';
                return true;
            } else {
                e.preventDefault();
                return false;
            }
        });
    </script>
}
